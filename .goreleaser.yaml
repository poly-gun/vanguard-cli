version: 2

project_name: polygun

env_files:
    github_token: ~/.config/goreleaser/github_token
    gitlab_token: ~/.config/goreleaser/gitlab_token

force_token: github

before:
    hooks:
        - go vet
        - go mod tidy
        - go mod vendor
        - go generate ./...

builds:
    -   env:
            - CGO_ENABLED=0
        ldflags:
            - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}"
        goos:
            - linux
            - windows
            - darwin

archives:
    -   formats: [ "tar.gz" ]
        name_template: >-
            {{ .ProjectName }}-
            {{- .Os }}-
            {{- if eq .Arch "amd64" }}x86-64
            {{- else if eq .Arch "386" }}i386
            {{- else }}{{ .Arch }}{{ end }}
            {{- if .Arm }}v{{ .Arm }}{{ end }}
        format_overrides:
            -   goos: windows
                formats: [ "zip" ]

brews:
    -   name: polygun

        directory: Formula

        commit_author:
            name: Jacob B. Sanders
            email: segmentational@gmail.com

        commit_msg_template: "[Chore]: Brew Formula Bump ({{ .ProjectName }}), {{ .Tag }}"

        homepage: "https://github.com/poly-gun/polygun-cli"

        description: "CLI"

        license: "MIT"

        skip_upload: false
        # skip_upload: true

        download_strategy: CurlDownloadStrategy
        # download_strategy: GitDownloadStrategy

        dependencies:
            -   name: git
            -   name: zsh
                type: optional
            -   name: fish
                type: optional
            -   name: bash
                type: optional

        # conflicts:
        #     - polygun-cli

        repository:
            branch: main
            owner: poly-gun
            name: homebrew-taps

#      install: | # https://github.com/Homebrew/brew/blob/master/docs/Formula-Cookbook.md
#        ENV["GOPATH"] = buildpath
#        # bin_path = buildpath/"src/gitlab.com:example-organization/group-1/group-2/example-cli"
#        bin_path = buildpath/"src/gitlab.com:example-organization/group-1/group-2/example-cli.git"
#        bin_path.install Dir["*"]
#        cd bin_path do
#            system "go", "build", *std_go_args(ldflags: "-s -w -X=main.version={{ .Tag }} -X=main.commit={{ .Commit }} -X=main.date={{ .Date }}"), "-o", bin/"example-cli", "."
#        end

changelog:
    # Changelog generation implementation to use.
    #
    # Valid options are:
    # - `git`: uses `git log`;
    # - `github`: uses the compare GitHub API, appending the author username to the changelog.
    # - `gitlab`: uses the compare GitLab API, appending the author name and email to the changelog (requires a personal access token).
    # - `gitea`: uses the compare Gitea API, appending the author username to the changelog.
    # - `github-native`: uses the GitHub release notes generation API, disables groups, sort, and any further formatting features.
    #
    # Default: 'git'.
    use: git
    # use: gitlab

    sort: asc

    abbrev: 0

    groups:
        -   title: "Features"
            regexp: '^.*?(f|F)eature(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 0
        -   title: "Enhancements"
            regexp: '^.*?(e|E)nhancement(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 1
        -   title: "Bug Fixes"
            regexp: '^.*?(b|B)ug(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 2
        -   title: "Rollback"
            regexp: '^.*?(r|R)evert(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 3
        -   title: "Chore"
            regexp: '^.*?(c|C)hore(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 4
        -   title: "Documentation"
            regexp: '^.*?(d|D)ocumentation(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 5
        -   title: "CI"
            regexp: '^.*?(c|C)(i|I)(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 6
        -   title: "Refactor"
            regexp: '^.*?(r|R)efactor(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 7
        -   title: "Internal"
            regexp: '^.*?(i|I)nternal(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
            order: 8
        -   title: Others
            order: 999

    # filters:
    #     include:
    #       - '^.*?(f|F)eature(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(e|E)nhancement(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(b|B)ug(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(r|R)evert(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(c|C)hore(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(d|D)ocumentation(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
    #       - '^.*?(c|C)(i|I)(\([[:word:]]+\))??!?(\ |)?(\:|\-)?(\ |).+$'
